// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid()) @unique
  username String @unique
  fullName String
  email String @unique
  passwordHash String 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Friend Request Relation
  sentRequests FriendRequest[] @relation("sentRequests")
  receivedRequests FriendRequest[] @relation("receivedRequests")

  // Messages Relation
  sentMessages Message[] @relation("sentMessages")
  receivedMessages Message[] @relation("receivedMessages")

  // Friends
  UserFriends Friend[] @relation("UserFriends")
  UserFriendOf Friend[] @relation("UserFriendOf")
}

model Friend {
  id        String   @id @default(uuid()) @unique
  userId    String
  friendId  String
  createdAt DateTime @default(now())

  user   User @relation("UserFriends", fields: [userId], references: [id])
  friend User @relation("UserFriendOf", fields: [friendId], references: [id])

  @@unique([userId, friendId]) // Prevent duplicate friendships
}

model FriendRequest {
  id String @id @default(uuid()) @unique
  fromId String
  toId String
  status RequestStatus @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  from User @relation("sentRequests", fields: [fromId], references: [id])
  to User @relation("receivedRequests", fields: [toId], references: [id])
}

enum RequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}

model Message {
  id String @id @default(uuid()) @unique
  senderId String
  receiverId String
  content String
  createdAt DateTime @default(now())

  sender User @relation("sentMessages", fields: [senderId], references: [id])
  receiver User @relation("receivedMessages", fields: [receiverId], references: [id])
}